#!/usr/bin/env python3

import os
import sys
from glob import glob
import subprocess

def run(cmd):
  print('$ ' + ' '.join(cmd))
  result = subprocess.run(cmd, stdout=subprocess.PIPE).stdout.decode('utf-8')
  print(result)
  return result

def to_notebook(path):
  return os.path.splitext(path)[0] + '.ipynb'

def remove(path):
  if os.path.exists(path):
    run(['git', 'rm', path])

for change in run('git diff --cached --name-status'.split(' ')).split('\n'):
  if change.strip() == '': continue
  if change[0] == 'R':
    status, path, new = change.split("\t")
    status = status[0]
  else:
    status, path = change.split("\t")

  src = None
  if os.path.splitext(path)[1] == '.py' and os.path.isfile(nb_path):
    with open(path, 'r', encoding='utf-8') as f:
      for line in range(10):
        if f.readline().replace(' ', '').startswith('#%%'):
          src = path
          break
  if src is None:
    continue

  if action == 'R':
    tgt = to_notebook(new)
    print(src, '=>', new , '=>', tgt)
    run(['jupytext', new, '--to', 'ipynb', '--set-kernel', '-', '--output', tgt])
    run(['git', 'add', tgt])
    remove(to_notebook(src))
  elif status in ['M', 'A']:
    print(src, '=>', tgt)
    tgt = to_notebook(src)
    run(['jupytext', src, '--to', 'ipynb', '--set-kernel', '-', '--output', tgt])
    run(['git', 'add', tgt])
  elif status == 'D':
    print(src, '=>', 'None')
    remove(to_notebook(src))
